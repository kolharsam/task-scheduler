syntax = "proto3";

option go_package = "github.com/kolharsam/task-scheduler/pkg/grpc-api";

service Scheduler {
    // client to server stream
    rpc HeartBeat (stream HeartbeatRequest) returns (HeartbeatResponse){}
    // server to client stream
    rpc RunTask(TaskReadyRequest) returns (stream TaskRequest){}
    // client events to server
    rpc ReadTaskUpdates(stream TaskUpdate) returns (TaskCompleteResponse){}
}

message TaskReadyRequest {
    string timestamp = 2;
    string serverId = 3;
}

message TaskUpdate {
    string timestamp = 1;
    string taskId = 2;
    TaskState state = 3;
    string errorDetails = 4;
}

message TaskCompleteResponse {
    string timestamp = 1;
}   

message TaskRequest {
    string command = 2;
    string taskId = 1;
    string requestTime = 3;
} 

message HeartbeatRequest {
    string serviceId = 1;
    string heartBeatTimestamp = 3;
};

message HeartbeatResponse {
    string serviceId = 1;
    string sentTimestamp = 2;
};

enum TaskState {
    INIT = 0;
    RUNNING = 1;
    SUCCESS = 2;
    ERROR = 3;
}
