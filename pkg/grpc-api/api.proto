syntax = "proto3";

option go_package = "github.com/kolharsam/task-scheduler/pkg/grpc-api";

service RingLeader {
    rpc Connect(ConnectRequest) returns (ConnectAck){}
    rpc Hearbeat(stream HeartbeatFromWorker) returns (stream HeartbeatFromLeader){}
}

service Worker {
    rpc RunTask(TaskRequest) returns (stream TaskUpdate){}
}

message ConnectRequest {
    string serviceId = 1;
    string serviceHost = 2;
    uint32 port = 3;
    string timeStamp = 4;
}

message ConnectAck {
    string host = 1;
    uint32 port = 2;
    string timeStamp = 3;
}

message TaskUpdate {
    string timestamp = 1;
    string taskId = 2;
    TaskState state = 3;
    string errorDetails = 4;
    string commandResult = 5;
}  

message TaskRequest {
    string command = 2;
    string taskId = 1;
    string requestTime = 3;
} 

message HeartbeatFromWorker {
    string serviceId = 1;
    string host = 2;
    uint32 port = 3;
    string timestamp = 4;
};

message HeartbeatFromLeader {
    LeaderStatus leaderStatus = 1;
    string timestamp = 2;
};

enum LeaderStatus {
    ACTIVE = 0;
    ERRORED = 1;
}

enum TaskState {
    RUNNING = 0;
    SUCCESS = 1;
    ERROR = 2;
}
